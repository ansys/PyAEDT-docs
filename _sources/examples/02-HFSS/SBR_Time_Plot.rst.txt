
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\02-HFSS\SBR_Time_Plot.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-HFSS_SBR_Time_Plot.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-HFSS_SBR_Time_Plot.py:


SBR+: HFSS to SBR+ time animation
---------------------------------
This example shows how you can use PyAEDT to create an SBR+ time animation
and save it to a GIF file. This example works only on CPython.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Perform required imports.
~~~~~~~~~~~~~~~
Perform requried imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default


    import os
    from pyaedt import Hfss, examples








.. GENERATED FROM PYTHON SOURCE LINES 17-22

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical model. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 26-29

Launch AEDT and load project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT and load the project.

.. GENERATED FROM PYTHON SOURCE LINES 29-36

.. code-block:: default


    project_file = examples.download_sbr_time()

    hfss = Hfss(project_file, specified_version="2022.2", non_graphical=non_graphical, new_desktop_session=True)

    hfss.analyze_nominal()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 37-41

Get solution data
~~~~~~~~~~~~~~~~~
Get solution data. After simulation is performed, you can load solutions
in the ``solution_data`` object.

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default


    solution_data = hfss.post.get_solution_data(expressions=["NearEX", "NearEY", "NearEZ"],
                                                variations={"_u": ["All"], "_v": ["All"], "Freq": ["All"]},
                                                context="Near_Field",
                                                report_category="Near Fields")








.. GENERATED FROM PYTHON SOURCE LINES 48-51

Compute IFFT
~~~~~~~~~~~~
Compute IFFT (Inverse Fast Fourier Transform).

.. GENERATED FROM PYTHON SOURCE LINES 51-55

.. code-block:: default


    t_matrix = solution_data.ifft("NearE", window=True)









.. GENERATED FROM PYTHON SOURCE LINES 56-59

Export IFFT to CSV file
~~~~~~~~~~~~~~~~~~~~~~~~
Export IFFT to a CSV file.

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    frames_list_file = solution_data.ifft_to_file(coord_system_center=[-0.15, 0, 0], db_val=True,
                                                  csv_dir=os.path.join(hfss.working_directory, "csv"))








.. GENERATED FROM PYTHON SOURCE LINES 64-67

Plot scene
~~~~~~~~~~
Plot the scene to create the time plot animation.

.. GENERATED FROM PYTHON SOURCE LINES 67-75

.. code-block:: default


    hfss.post.plot_scene(frames_list_file, os.path.join(hfss.working_directory, "animation.gif"), norm_index=15, dy_rng=35,
                         show=False)


    hfss.release_desktop()





.. image-sg:: /examples/02-HFSS/images/sphx_glr_SBR_Time_Plot_001.png
   :alt: SBR Time Plot
   :srcset: /examples/02-HFSS/images/sphx_glr_SBR_Time_Plot_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  28.488 seconds)


.. _sphx_glr_download_examples_02-HFSS_SBR_Time_Plot.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: SBR_Time_Plot.py <SBR_Time_Plot.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: SBR_Time_Plot.ipynb <SBR_Time_Plot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
