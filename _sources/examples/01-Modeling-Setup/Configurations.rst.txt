
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\01-Modeling-Setup\Configurations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-Modeling-Setup_Configurations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-Modeling-Setup_Configurations.py:


General: configuration files
----------------------------
This example shows how you can use PyAEDT to export configuration files and reuse
them to import in a new project. A configuration file is supported by these apps:

* HFSS
* 2D Extractor and Q3D Extractor
* Maxwell
* Icepak
* Mechanical

The following sections are covered:

* Variables
* Mesh operations (except Icepak)
* Setup and optimetrics
* Material properties
* Object properties
* Boundaries and excitations

When a boundary is attached to a face, the tool tries to match it with a
``FaceByPosition`` on the same object name on the target design. If, for
any reason, this face position has changed or the object name in the target
design has changed, the boundary fails to apply.

.. GENERATED FROM PYTHON SOURCE LINES 29-32

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports from PyAEDT.

.. GENERATED FROM PYTHON SOURCE LINES 32-41

.. code-block:: default


    import os
    import tempfile
    import shutil
    from pyaedt import Icepak
    from pyaedt import examples
    from pyaedt import generate_unique_folder_name









.. GENERATED FROM PYTHON SOURCE LINES 42-47

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 51-54

Open project
~~~~~~~~~~~~
Download the project, open it, and save it to the temporary folder.

.. GENERATED FROM PYTHON SOURCE LINES 54-60

.. code-block:: default


    project_full_name = examples.download_icepak(generate_unique_folder_name("Graphic_Card"))

    ipk = Icepak(project_full_name, specified_version="2022.2", new_desktop_session=True, non_graphical=non_graphical)
    ipk.autosave_disable()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 61-64

Create source blocks
~~~~~~~~~~~~~~~~~~~~
Create a source block on the CPU and memories.

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default


    ipk.create_source_block("CPU", "25W")
    ipk.create_source_block(["MEMORY1", "MEMORY1_1"], "5W")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Boundary.BoundaryObject object at 0x000001FD9C1E46A0>



.. GENERATED FROM PYTHON SOURCE LINES 69-72

Assign boundaries
~~~~~~~~~~~~~~~~~
Assign the opening and grille.

.. GENERATED FROM PYTHON SOURCE LINES 72-77

.. code-block:: default


    region = ipk.modeler["Region"]
    ipk.assign_openings(air_faces=region.bottom_face_x.id)
    ipk.assign_grille(air_faces=region.top_face_x.id, free_area_ratio=0.8)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Boundary.BoundaryObject object at 0x000001FDA17C4F70>



.. GENERATED FROM PYTHON SOURCE LINES 78-83

Create setup
~~~~~~~~~~~~
Create the setup. Properties can be set up from the ``setup`` object
with getters and setters. They don't have to perfectly match the property
syntax.

.. GENERATED FROM PYTHON SOURCE LINES 83-91

.. code-block:: default


    setup1 = ipk.create_setup()
    setup1["FlowRegime"] = "Turbulent"
    setup1["Max Iterations"] = 5
    setup1["Solver Type Pressure"] = "flex"
    setup1["Solver Type Temperature"] = "flex"
    ipk.save_project(r"C:\temp\Graphic_card.aedt")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 92-95

Export project to step file
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Export the current project to the step file.

.. GENERATED FROM PYTHON SOURCE LINES 95-100

.. code-block:: default


    filename = ipk.design_name
    file_path = os.path.join(ipk.working_directory, filename + ".step")
    ipk.export_3d_model(filename, ipk.working_directory, ".step", [], [])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 101-105

Export configuration files
~~~~~~~~~~~~~~~~~~~~~~~~~~
Export the configuration files. You can optionally disable the export and
import sections.

.. GENERATED FROM PYTHON SOURCE LINES 105-109

.. code-block:: default


    conf_file = ipk.configurations.export_config()
    ipk.close_project()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 110-113

Create project
~~~~~~~~~~~~~~
Create an Icepak project and import the step.

.. GENERATED FROM PYTHON SOURCE LINES 113-117

.. code-block:: default


    app = Icepak(projectname="new_proj_Ipk")
    app.modeler.import_3d_cad(file_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 118-122

Import and apply configuration file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import and apply the configuration file. You can apply all or part of the
JSON file that you import using options in the ``configurations`` object.

.. GENERATED FROM PYTHON SOURCE LINES 122-127

.. code-block:: default


    out = app.configurations.import_config(conf_file)
    app.configurations.results.global_import_success






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 128-131

Close project
~~~~~~~~~~~~~
Close the project.

.. GENERATED FROM PYTHON SOURCE LINES 131-134

.. code-block:: default


    if os.name != "posix":
        app.release_desktop()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.692 seconds)


.. _sphx_glr_download_examples_01-Modeling-Setup_Configurations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Configurations.py <Configurations.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Configurations.ipynb <Configurations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
