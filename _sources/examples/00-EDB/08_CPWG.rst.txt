
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\00-EDB\08_CPWG.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-EDB_08_CPWG.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-EDB_08_CPWG.py:


EDB: fully parametrized CPWG design
-----------------------------------
This example shows how you can use HFSS 3D Layout to create a parametric design
for a CPWG (coplanar waveguide with ground).

.. GENERATED FROM PYTHON SOURCE LINES 9-13

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Peform required imports. Importing the ``Hfss3dlayout`` object initializes it
on version 2022 R2.

.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: default


    from pyaedt import Edb
    from pyaedt.generic.general_methods import generate_unique_name, generate_unique_folder_name
    from pyaedt import Hfss3dLayout
    import os
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 21-24

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 28-31

Launch EDB
~~~~~~~~~~
Launch EDB.

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: default


    aedb_path = os.path.join(generate_unique_folder_name(), generate_unique_name("pcb") + ".aedb")
    print(aedb_path)
    edbapp = Edb(edbpath=aedb_path, edbversion="2022.2")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    D:\Temp\pyaedt_prj_7O7\pcb_MK0AFY.aedb




.. GENERATED FROM PYTHON SOURCE LINES 37-40

Define parameters
~~~~~~~~~~~~~~~~~
Define parameters.

.. GENERATED FROM PYTHON SOURCE LINES 40-48

.. code-block:: default


    params = {"$ms_width": "0.4mm",
              "$ms_clearance": "0.3mm",
              "$ms_length": "20mm",
              }
    for par_name in params:
        edbapp.add_design_variable(par_name, params[par_name])








.. GENERATED FROM PYTHON SOURCE LINES 49-52

Create stackup
~~~~~~~~~~~~~~
Create a symmetric stackup.

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default


    edbapp.stackup.create_symmetric_stackup(2)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 56-59

Draw planes
~~~~~~~~~~~
Draw planes.

.. GENERATED FROM PYTHON SOURCE LINES 59-72

.. code-block:: default


    plane_lw_pt = ["0mm", "-3mm"]
    plane_up_pt = ["$ms_length", "3mm"]

    top_layer_obj = edbapp.core_primitives.create_rectangle("TOP", net_name="gnd",
                                                            lower_left_point=plane_lw_pt,
                                                            upper_right_point=plane_up_pt)
    bot_layer_obj = edbapp.core_primitives.create_rectangle("BOTTOM", net_name="gnd",
                                                            lower_left_point=plane_lw_pt,
                                                            upper_right_point=plane_up_pt)
    layer_dict = {"TOP": top_layer_obj,
                  "BOTTOM": bot_layer_obj}








.. GENERATED FROM PYTHON SOURCE LINES 73-76

Draw trace
~~~~~~~~~~
Draw a trace.

.. GENERATED FROM PYTHON SOURCE LINES 76-86

.. code-block:: default


    trace_path = [["0", "0"], ["$ms_length", "0"]]
    edbapp.core_primitives.create_trace(trace_path,
                                        layer_name="TOP",
                                        width="$ms_width",
                                        net_name="sig",
                                        start_cap_style="Flat",
                                        end_cap_style="Flat"
                                        )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives object at 0x000001FD98967A90>



.. GENERATED FROM PYTHON SOURCE LINES 87-90

Create trace to plane clearance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a trace to the plane clearance.

.. GENERATED FROM PYTHON SOURCE LINES 90-97

.. code-block:: default


    poly_void = edbapp.core_primitives.create_trace(trace_path, layer_name="TOP", net_name="gnd",
                                                    width="{}+2*{}".format("$ms_width", "$ms_clearance"),
                                                    start_cap_style="Flat",
                                                    end_cap_style="Flat")
    edbapp.core_primitives.add_void(layer_dict["TOP"], poly_void)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    False



.. GENERATED FROM PYTHON SOURCE LINES 98-101

Create ground via padstack and place ground stitching vias
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a ground via padstack and place ground stitching vias.

.. GENERATED FROM PYTHON SOURCE LINES 101-114

.. code-block:: default


    edbapp.core_padstack.create_padstack(padstackname="GVIA",
                                         holediam="0.3mm",
                                         paddiam="0.5mm",
                                         )

    yloc_u = "$ms_width/2+$ms_clearance+0.25mm"
    yloc_l = "-$ms_width/2-$ms_clearance-0.25mm"

    for i in np.arange(1, 20):
        edbapp.core_padstack.place_padstack([str(i) + "mm", yloc_u], "GVIA", net_name="GND")
        edbapp.core_padstack.place_padstack([str(i) + "mm", yloc_l], "GVIA", net_name="GND")








.. GENERATED FROM PYTHON SOURCE LINES 115-118

Save and close EDB
~~~~~~~~~~~~~~~~~~
Save and close EDB.

.. GENERATED FROM PYTHON SOURCE LINES 118-122

.. code-block:: default


    edbapp.save_edb()
    edbapp.close_edb()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 123-126

Open EDB in AEDT
~~~~~~~~~~~~~~~~
Open EDB in AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 126-130

.. code-block:: default


    h3d = Hfss3dLayout(projectname=os.path.join(aedb_path, "edb.def"), specified_version="2022.2",
                       non_graphical=non_graphical)








.. GENERATED FROM PYTHON SOURCE LINES 131-134

Create wave ports
~~~~~~~~~~~~~~~~~
Create wave ports.

.. GENERATED FROM PYTHON SOURCE LINES 134-138

.. code-block:: default


    h3d.create_edge_port("line_3", 0, iswave=True, wave_vertical_extension=10, wave_horizontal_extension=10)
    h3d.create_edge_port("line_3", 2, iswave=True, wave_vertical_extension=10, wave_horizontal_extension=10)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Boundary.BoundaryObject3dLayout object at 0x000001FD9C238A60>



.. GENERATED FROM PYTHON SOURCE LINES 139-142

Edit airbox extents
~~~~~~~~~~~~~~~~~~~
Edit airbox extents.

.. GENERATED FROM PYTHON SOURCE LINES 142-146

.. code-block:: default


    h3d.edit_hfss_extents(air_vertical_positive_padding="10mm",
                          air_vertical_negative_padding="1mm")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 147-150

Create setup
~~~~~~~~~~~~
Create an HFSS simulation setup.

.. GENERATED FROM PYTHON SOURCE LINES 150-166

.. code-block:: default


    setup = h3d.create_setup()
    h3d.create_linear_count_sweep(
        setupname=setup.name,
        unit="GHz",
        freqstart=0,
        freqstop=10,
        num_of_freq_points=1001,
        sweepname="sweep1",
        sweep_type="Interpolating",
        interpolation_tol_percent=1,
        interpolation_max_solutions=255,
        save_fields=False,
        use_q3d_for_dc=False,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.SetupTemplates.SweepHFSS3DLayout object at 0x000001FD9C238D30>



.. GENERATED FROM PYTHON SOURCE LINES 167-170

Start HFSS solver
~~~~~~~~~~~~~~~~~
Start the HFSS solver by uncommenting the ``h3d.analyze_nominal()`` command.

.. GENERATED FROM PYTHON SOURCE LINES 170-184

.. code-block:: default


    # h3d.analyze_nominal()

    # Save AEDT
    h3d.save_project()

    # Release AEDT.
    h3d.release_desktop()

    aedt_path = aedb_path.replace(".aedb", ".aedt")
    print("****************************************",
          "***Your AEDT project is save to " + aedt_path,
          "****************************************",
          sep="\n")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ****************************************
    ***Your AEDT project is save to D:\Temp\pyaedt_prj_7O7\pcb_MK0AFY.aedt
    ****************************************





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  26.888 seconds)


.. _sphx_glr_download_examples_00-EDB_08_CPWG.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 08_CPWG.py <08_CPWG.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 08_CPWG.ipynb <08_CPWG.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
