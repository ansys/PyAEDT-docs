
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Circuit\EMIT_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Circuit_EMIT_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Circuit_EMIT_Example.py:


EMIT: antenna
---------------------
This example shows how you can use PyAEDT to create a project in EMIT for
the simulation of an antenna.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required inputs
~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: default


    import os
    from pyaedt import Emit
    from pyaedt import Desktop
    from pyaedt import generate_unique_project_name









.. GENERATED FROM PYTHON SOURCE LINES 19-26

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"``` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.
The ``NewThread`` Boolean variable defines whether to create a new instance
of AEDT or try to connect to existing instance of it if one is available.

.. GENERATED FROM PYTHON SOURCE LINES 26-32

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")
    NewThread = False
    desktop_version = "2022.2"









.. GENERATED FROM PYTHON SOURCE LINES 33-37

Launch AEDT with EMIT
~~~~~~~~~~~~~~~~~~~~~
Launch AEDT with EMIT. The ``Desktop`` class initializes AEDT and starts it
on the specified version and in the specified graphical mode.

.. GENERATED FROM PYTHON SOURCE LINES 37-42

.. code-block:: default


    d = Desktop(desktop_version, non_graphical, NewThread)
    aedtapp = Emit(generate_unique_project_name())









.. GENERATED FROM PYTHON SOURCE LINES 43-46

Create and connect EMIT components
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create three radios and connect an antenna to each one.

.. GENERATED FROM PYTHON SOURCE LINES 46-63

.. code-block:: default


    rad1 = aedtapp.modeler.components.create_component("UE - Handheld")
    ant1 = aedtapp.modeler.components.create_component("Antenna")
    if rad1 and ant1:
        ant1.move_and_connect_to(rad1)

    rad2 = aedtapp.modeler.components.create_component("GPS Receiver")
    ant2 = aedtapp.modeler.components.create_component("Antenna")
    if rad2 and ant2:
        ant2.move_and_connect_to(rad2)

    rad3 = aedtapp.modeler.components.create_component("Bluetooth")
    ant3 = aedtapp.modeler.components.create_component("Antenna")
    if rad3 and ant3:
        ant3.move_and_connect_to(rad3)









.. GENERATED FROM PYTHON SOURCE LINES 64-68

Define coupling among RF systems
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define the coupling among the RF systems. This portion of the EMIT API is not
yet implemented.

.. GENERATED FROM PYTHON SOURCE LINES 71-74

Run EMIT simulation
~~~~~~~~~~~~~~~~~~~
Run the EMIT simulation. This portion of the EMIT API is not yet implemented.

.. GENERATED FROM PYTHON SOURCE LINES 77-82

Save project and close AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
After the simulation completes, you can close AEDT or release it using the
:func:`pyaedt.Desktop.force_close_desktop` method.
All methods provide for saving the project before closing.

.. GENERATED FROM PYTHON SOURCE LINES 82-85

.. code-block:: default


    aedtapp.save_project()
    aedtapp.release_desktop(close_projects=True, close_desktop=True)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.263 seconds)


.. _sphx_glr_download_examples_03-Circuit_EMIT_Example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EMIT_Example.py <EMIT_Example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EMIT_Example.ipynb <EMIT_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
