
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Circuit\EMIT_HFSS_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Circuit_EMIT_HFSS_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Circuit_EMIT_HFSS_Example.py:


EMIT: HFSS to EMIT coupling
---------------------------
This example shows how you can use PyAEDT to open an AEDT project with
an HFSS design, create an EMIT design in the project, and link the HFSS design
as a coupling link in the EMIT design.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-23

.. code-block:: default


    import os
    import tempfile

    # Import required modules
    from pyaedt.generic.filesystem import Scratch

    from pyaedt import Emit
    from pyaedt import Desktop









.. GENERATED FROM PYTHON SOURCE LINES 24-33

# Set non-graphical mode
 ~~~~~~~~~~~~~~~~~~~~~~
 Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
 documentation only.
 You can set ``non_graphical`` either to ``True`` or ``False``.
 The Boolean parameter ``new_thread`` defines whether to create a new instance
 of AEDT or try to connect to an existing instance of it.

 The following code uses AEDT 2022 R2.

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")
    NewThread = True
    desktop_version = "2022.2"
    scratch_path = tempfile.gettempdir()








.. GENERATED FROM PYTHON SOURCE LINES 40-44

Launch AEDT with EMIT
~~~~~~~~~~~~~~~~~~~~~
Launch AEDT with EMIT. The ``Desktop`` class initializes AEDT and starts it
on the specified version and in the specified graphical mode.

.. GENERATED FROM PYTHON SOURCE LINES 44-87

.. code-block:: default


    d = Desktop(desktop_version, non_graphical, NewThread)

    temp_folder = os.path.join(scratch_path, ("EmitHFSSExample"))
    if not os.path.exists(temp_folder):
        os.mkdir(temp_folder)

    example_name = "Cell Phone RFI Desense"
    example_aedt = example_name + ".aedt"
    example_lock = example_aedt + ".lock"
    example_pdf_file = example_name + " Example.pdf"

    example_dir = os.path.join(d.install_path, "Examples\\EMIT")
    example_project = os.path.join(example_dir, example_aedt)
    example_pdf = os.path.join(example_dir, example_pdf_file)

    # If the ``Cell Phone RFT Defense`` example is not in the installation directory, exit from this example.
    if not os.path.exists(example_project):
        msg = """
            Cell phone RFT Desense example file is not in the
             Examples/EMIT directory under the EDT installation. You cannot run this example.
            """
        print(msg)
        d.release_desktop(True, True)
        exit()

    my_project = os.path.join(temp_folder, example_aedt)
    my_project_lock = os.path.join(temp_folder, example_lock)
    my_project_pdf = os.path.join(temp_folder, example_pdf_file)

    if os.path.exists(my_project):
        os.remove(my_project)

    if os.path.exists(my_project_lock):
        os.remove(my_project_lock)

    with Scratch(scratch_path) as local_scratch:
        local_scratch.copyfile(example_project, my_project)
        if os.path.exists(example_pdf):
            local_scratch.copyfile(example_pdf, my_project_pdf)

    aedtapp = Emit(my_project)








.. GENERATED FROM PYTHON SOURCE LINES 88-91

Create and connect EMIT components
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create three radios and connect an antenna to each one.

.. GENERATED FROM PYTHON SOURCE LINES 91-102

.. code-block:: default


    rad1 = aedtapp.modeler.components.create_component("UE - Handheld")
    ant1 = aedtapp.modeler.components.create_component("Antenna")
    if rad1 and ant1:
        ant1.move_and_connect_to(rad1)

    rad2 = aedtapp.modeler.components.create_component("GPS Receiver")
    ant2 = aedtapp.modeler.components.create_component("Antenna")
    if rad2 and ant2:
        ant2.move_and_connect_to(rad2)








.. GENERATED FROM PYTHON SOURCE LINES 103-106

Define coupling among RF systems
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define coupling among the RF systems.

.. GENERATED FROM PYTHON SOURCE LINES 106-112

.. code-block:: default


    for link in aedtapp.couplings.linkable_design_names:
        aedtapp.couplings.add_link(link)

    for link in aedtapp.couplings.coupling_names:
        aedtapp.couplings.update_link(link)







.. GENERATED FROM PYTHON SOURCE LINES 113-116

Run EMIT simulation
~~~~~~~~~~~~~~~~~~~
Run the EMIT simulation. This portion of the EMIT API is not yet implemented.

.. GENERATED FROM PYTHON SOURCE LINES 119-124

Save project and close AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
After the simulation completes, you can close AEDT or release it using the
:func:`pyaedt.Desktop.force_close_desktop` method.
All methods provide for saving the project before closing.

.. GENERATED FROM PYTHON SOURCE LINES 124-127

.. code-block:: default


    aedtapp.save_project()
    aedtapp.release_desktop(close_projects=True, close_desktop=True)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.123 seconds)


.. _sphx_glr_download_examples_03-Circuit_EMIT_HFSS_Example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EMIT_HFSS_Example.py <EMIT_HFSS_Example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EMIT_HFSS_Example.ipynb <EMIT_HFSS_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
